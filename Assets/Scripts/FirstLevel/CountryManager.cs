using System;
using System.Collections;
using System.Collections.Generic;
using TMPro;
using UnityEngine;

public class CountryManager : MonoBehaviour
{
    private TMP_Dropdown _dropdown;

    [SerializeField] private TextMeshProUGUI longtitudesCoordinatesText;
    [SerializeField] private TextMeshProUGUI latitudesCoordinatesText;

    private string[] countries =
    {
        "Select a location to teleport",
        "Afghanistan",
        "Albania",
        "Algeria",
        "American Samoa",
        "Andorra",
        "Angola",
        "Antigua and Barbuda",
        "Argentina",
        "Armenia",
        "Aruba",
        "Australia",
        "Austria",
        "Azerbaijan",
        "Bahamas",
        "Bahrain",
        "Bangladesh",
        "Barbados",
        "Belarus",
        "Belgium",
        "Belize",
        "Benin",
        "Bhutan",
        "Bolivia",
        "Bosnia and Herzegovina",
        "Botswana",
        "Brazil",
        "British Virgin Islands",
        "Brunei Darussalam",
        "Bulgaria",
        "Burkina Faso",
        "Burundi",
        "Cambodia",
        "Cameroon",
        "Canada",
        "Cape Verde",
        "Cayman Islands",
        "Central African Republic",
        "Chad",
        "Chile",
        "China",
        "Colombia",
        "Comros",
        "Congo",
        "Costa Rica",
        "Cote d'Ivoire",
        "Croatia",
        "Cuba",
        "Cyprus",
        "Czech Republic",
        "Democratic Republic of the Congo",
        "Denmark",
        "Djibouti",
        "Dominica",
        "Dominica Republic",
        "East Timor",
        "Ecuador",
        "Egypt",
        "El Salvador",
        "Equatorial Guinea",
        "Eritrea",
        "Estonia",
        "Ethiopia",
        "Falkland Islands (Malvinas)",
        "Faroe Islands",
        "Fiji",
        "Finland",
        "France",
        "French Guiana",
        "French Polynesia",
        "Gabon",
        "Gambia",
        "Georgia",
        "Germany",
        "Ghana",
        "Greece",
        "Greenland",
        "Guadeloupe",
        "Guatemala",
        "Guernsey",
        "Guinea",
        "Guinea-Bissau",
        "Guyana",
        "Haiti",
        "Heard Island and McDonald Islands",
        "Honduras",
        "Hungary",
        "Iceland",
        "India",
        "Indonesia",
        "Iran (Islamic Republic of)",
        "Iraq",
        "Ireland",
        "Israel",
        "Italy",
        "Jamaica",
        "Jordan",
        "Kazakhstan",
        "Kenya",
        "Kiribati",
        "Kuwait",
        "Kyrgyzstan",
        "Lao People's Democratic Republic",
        "Latvia",
        "Lebanon",
        "Lesotho",
        "Liberia",
        "Libyan Arab Jamahiriya",
        "Liechtenstein",
        "Lithuania",
        "Luxembourg",
        "Macao, China",
        "Madagascar",
        "Macedonia (Former Yugoslav Republic)",
        "Malawi",
        "Malaysia",
        "Maldives",
        "Mali",
        "Malta",
        "Martinique",
        "Mauritania",
        "Mayotte",
        "Mexico",
        "Micronesia (Federated States of)",
        "Moldova, Republic of",
        "Mozambique",
        "Myanmar",
        "Namibia",
        "Nepal",
        "Netherlands",
        "Netherlands Antilles",
        "New Caledonia",
        "New Zealand",
        "Nicaragua",
        "Niger",
        "Nigeria",
        "Norfolk Island",
        "North Korea",
        "Northern Mariana Islands",
        "Norway",
        "Oman",
        "Pakistan",
        "Palau",
        "Panama",
        "Papua New Guinea",
        "Paraguay",
        "Peru",
        "Philippines",
        "Poland",
        "Portugal",
        "Puerto Rico",
        "Qatar",
        "Republic of Korea",
        "Romania",
        "Russian Federation",
        "Rawanda",
        "Saint Kitts and Nevis",
        "Saint Lucia",
        "Saint Pierre and Miquelon",
        "Saint Vincent and the Greenadines",
        "Samoa",
        "San Marino",
        "Sao Tome and Principe",
        "Saudi Arabia",
        "Senegal",
        "Sierra Leone",
        "Slovakia",
        "Slovenia",
        "Solomon Islands",
        "Somalia",
        "South Africa",
        "Spain",
        "Sudan",
        "Suriname",
        "Swaziland",
        "Sweden",
        "Switzerland",
        "Syrian Arab Republic",
        "Tajikistan",
        "Thailand",
        "Togo",
        "Tonga",
        "Tunisia",
        "Turkey",
        "Turkmenistan",
        "Tuvalu",
        "Uganda",
        "Ukraine",
        "United Arab Emirates",
        "United Kingdom of Great Britain and Northern Ireland",
        "United Republic of Tanzania",
        "United States of America",
        "United States of Virgin Islands",
        "Uruguay",
        "Uzbekistan",
        "Vanuatu",
        "Venezuela",
        "Viet Nam",
        "Yugoslavia",
        "Zambia",
        "Zimbabwe",
    };

    private string[] longtitudes =
    {
        "00.00N",
        "34.28N",
        "41.18N",
        "36.42N",
        "14.16S",
        "42.31N",
        "08.50S",
        "17.20N",
        "36.30S",
        "40.10N",
        "12.32N",
        "35.15S",
        "48.12N",
        "40.29N",
        "25.05N",
        "26.10N",
        "23.43N",
        "13.05N",
        "53.52N",
        "50.51N",
        "17.18N",
        "06.23N",
        "27.31N",
        "16.20S",
        "43.52N",
        "24.45S",
        "15.47S",
        "18.27N",
        "04.52N",
        "42.45N",
        "12.15N",
        "03.16S",
        "11.33N",
        "03.50N",
        "45.27N",
        "15.02N",
        "19.20N",
        "04.23N",
        "12.10N",
        "33.24S",
        "39.55N",
        "04.34N",
        "11.40S",
        "04.09S",
        "09.55N",
        "06.49N",
        "45.50N",
        "23.08N",
        "35.10N",
        "50.05N",
        "04.20S",
        "55.41N",
        "11.08N",
        "15.20N",
        "18.30N",
        "08.29S",
        "00.15S",
        "30.01N",
        "13.40N",
        "03.45N",
        "15.19N",
        "59.22N",
        "09.02N",
        "51.40S",
        "62.05N",
        "18.06S",
        "60.15N",
        "48.50N",
        "05.05N",
        "17.32S",
        "00.25N",
        "13.28N",
        "41.43N",
        "52.30N",
        "05.35N",
        "37.58N",
        "64.10N",
        "16.00N",
        "14.40N",
        "49.26N",
        "09.29N",
        "11.45N",
        "06.50N",
        "18.40N",
        "53.00S",
        "14.05N",
        "47.29N",
        "64.10N",
        "28.37N",
        "06.09S",
        "35.44N",
        "33.20N",
        "53.21N",
        "31.71N",
        "41.54N",
        "18.00N",
        "31.57N",
        "51.10N",
        "01.17S",
        "01.30N",
        "29.30N",
        "42.54N",
        "17.58N",
        "56.53N",
        "33.53N",
        "29.18S",
        "06.18N",
        "32.49N",
        "47.08N",
        "54.38N",
        "49.37N",
        "22.12N",
        "18.55S",
        "42.01N",
        "14.00S",
        "03.09N",
        "04.00N",
        "12.34N",
        "35.54N",
        "14.36N",
        "20.10S",
        "12.48S",
        "19.20N",
        "06.55N",
        "47.02N",
        "25.58S",
        "16.45N",
        "22.35S",
        "27.45N",
        "52.23N",
        "12.05N",
        "22.17S",
        "41.19S",
        "12.06N",
        "13.27N",
        "09.05N",
        "45.20S",
        "39.09N",
        "15.12N",
        "59.55N",
        "23.37N",
        "33.40N",
        "07.20N",
        "09.00N",
        "09.24S",
        "25.10S",
        "12.00S",
        "14.40N",
        "52.13N",
        "38.42N",
        "18.28N",
        "25.15N",
        "37.31N",
        "44.27N",
        "55.45N",
        "01.59S",
        "17.17N",
        "14.02N",
        "46.46N",
        "13.10N",
        "13.50S",
        "43.55N",
        "00.10N",
        "24.41N",
        "14.34N",
        "08.30N",
        "48.10N",
        "46.04N",
        "09.27S",
        "02.02N",
        "25.44S",
        "40.25N",
        "15.31N",
        "05.50N",
        "26.18S",
        "59.20N",
        "46.57N",
        "33.30N",
        "38.33N",
        "13.45N",
        "06.09N",
        "21.10S",
        "36.50N",
        "39.57N",
        "38.00N",
        "08.31S",
        "00.20N",
        "50.30N",
        "24.28N",
        "51.36N",
        "06.08S",
        "39.91N",
        "18.21N",
        "34.50S",
        "41.20N",
        "17.45S",
        "10.30N",
        "21.05N",
        "44.50N",
        "15.28S",
        "17.43S",
    };

    private string[] latitudes =
    {
        "00.00E",
        "69.11E",
        "19.49E",
        "03.08E",
        "170.43W",
        "01.32E",
        "13.15E",
        "61.48W",
        "60.00W",
        "44.31E",
        "70.02W",
        "149.08E",
        "16.22E",
        "49.56E",
        "77.20W",
        "50.30E",
        "90.26E",
        "59.30W",
        "27.30E",
        "04.21E",
        "88.30W",
        "02.42E",
        "89.45E",
        "68.10W",
        "18.26E",
        "25.57E",
        "47.55W",
        "64.37W",
        "115.00E",
        "23.20E",
        "01.30W",
        "29.18E",
        "104.55E",
        "11.35E",
        "75.42W",
        "23.34W",
        "81.24W",
        "18.35E",
        "14.59E",
        "70.40W",
        "116.20E",
        "74.00W",
        "43.16E",
        "15.12E",
        "84.02W",
        "05.17W",
        "15.58E",
        "82.22W",
        "33.25E",
        "14.22E",
        "15.15E",
        "12.34E",
        "42.20E",
        "61.24W",
        "69.59W",
        "125.34E",
        "78.35W",
        "31.14E",
        "89.10W",
        "08.50E",
        "38.55E",
        "24.48E",
        "38.42E",
        "59.51W",
        "06.56W",
        "178.30E",
        "25.03E",
        "02.20E",
        "52.18W",
        "149.34W",
        "09.26E",
        "16.40W",
        "44.50E",
        "13.25E",
        "00.06W",
        "23.46E",
        "51.35W",
        "61.44W",
        "90.22W",
        "02.33W",
        "13.49W",
        "15.45W",
        "58.12W",
        "72.20W",
        "74.00E",
        "87.14W",
        "19.05E",
        "21.57W",
        "77.13E",
        "106.49E",
        "51.30E",
        "44.30E",
        "06.15W",
        "35.10W",
        "12.29E",
        "76.50W",
        "35.52E",
        "71.30E",
        "36.48E",
        "173.00E",
        "48.00E",
        "74.46E",
        "102.36E",
        "24.08E",
        "35.31E",
        "27.30E",
        "10.47W",
        "13.07E",
        "09.31E",
        "25.19E",
        "06.09E",
        "113.33E",
        "47.31E",
        "21.26E",
        "33.48E",
        "101.41E",
        "73.28E",
        "07.55W",
        "14.31E",
        "61.02W",
        "57.30E",
        "45.14E",
        "99.10W",
        "158.09E",
        "28.50E",
        "32.32E",
        "96.20E",
        "17.04E",
        "85.20E",
        "04.54E",
        "69.00W",
        "166.30E",
        "174.46E",
        "86.20W",
        "02.06E",
        "07.32E",
        "168.43E",
        "125.30E",
        "145.45E",
        "10.45E",
        "58.36E",
        "73.10E",
        "134.28E",
        "79.25W",
        "147.08E",
        "57.30W",
        "77.00W",
        "121.03E",
        "21.00E",
        "09.10W",
        "66.07W",
        "51.35E",
        "126.58E",
        "26.10E",
        "37.35E",
        "30.04E",
        "62.43W",
        "60.58W",
        "56.12W",
        "61.10W",
        "171.50W",
        "12.30E",
        "06.39E",
        "46.42E",
        "17.29W",
        "13.17W",
        "17.07E",
        "14.33E",
        "159.57E",
        "45.25E",
        "28.12E",
        "03.45W",
        "32.35E",
        "55.10W",
        "31.06E",
        "18.03E",
        "07.28E",
        "36.18E",
        "68.48E",
        "100.35E",
        "01.20E",
        "174.00W",
        "10.11E",
        "32.54E",
        "57.50E",
        "179.13E",
        "32.30E",
        "30.28E",
        "54.22E",
        "00.05W",
        "35.45E",
        "77.02W",
        "64.56W",
        "56.11W",
        "69.10E",
        "168.18E",
        "66.55W",
        "105.55E",
        "20.37E",
        "28.16E",
        "31.02E",
    };

    private void Awake()
    {
        _dropdown = gameObject.GetComponent<TMP_Dropdown>();
    }

    private void Start()
    {
        List<string> countriesList = new List<string>();

        foreach (var country in countries)
        {
            countriesList.Add(country);
        }

        _dropdown.AddOptions(countriesList);
    }

    public void HandleInputData(int val)
    {
        longtitudesCoordinatesText.text = longtitudes[val];
        latitudesCoordinatesText.text = latitudes[val];

    }
}